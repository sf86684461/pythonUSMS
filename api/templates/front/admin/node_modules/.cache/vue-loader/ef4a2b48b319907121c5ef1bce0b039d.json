{"remainingRequest":"/Users/shaofeng/Desktop/codebuddy/pythonUSMS-1/api/templates/front/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shaofeng/Desktop/codebuddy/pythonUSMS-1/api/templates/front/admin/src/components/common/img.vue?vue&type=style&index=0&id=f354cfa2&rel=stylesheet%2Fscss&lang=scss&scoped=true","dependencies":[{"path":"/Users/shaofeng/Desktop/codebuddy/pythonUSMS-1/api/templates/front/admin/src/components/common/img.vue","mtime":1757455257866},{"path":"/Users/shaofeng/Desktop/codebuddy/pythonUSMS-1/api/templates/front/admin/node_modules/css-loader/dist/cjs.js","mtime":1757455256293},{"path":"/Users/shaofeng/Desktop/codebuddy/pythonUSMS-1/api/templates/front/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1757455257715},{"path":"/Users/shaofeng/Desktop/codebuddy/pythonUSMS-1/api/templates/front/admin/node_modules/postcss-loader/src/index.js","mtime":1757455257150},{"path":"/Users/shaofeng/Desktop/codebuddy/pythonUSMS-1/api/templates/front/admin/node_modules/sass-loader/dist/cjs.js","mtime":1757455257492},{"path":"/Users/shaofeng/Desktop/codebuddy/pythonUSMS-1/api/templates/front/admin/node_modules/cache-loader/dist/cjs.js","mtime":1757455255994},{"path":"/Users/shaofeng/Desktop/codebuddy/pythonUSMS-1/api/templates/front/admin/node_modules/vue-loader/lib/index.js","mtime":1757455257715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgouYXZhdGFyLXVwbG9hZGVyIC5lbC11cGxvYWQgewogIGJvcmRlcjogMXB4IGRhc2hlZCAjY2NjOwogIGJvcmRlci1yYWRpdXM6IDZweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIG92ZXJmbG93OiBoaWRkZW47Cn0KCi5hdmF0YXItdXBsb2FkZXIgLmVsLXVwbG9hZDpob3ZlciB7CiAgYm9yZGVyLWNvbG9yOiAjNDA5RUZGOwp9CgouYXZhdGFyLXVwbG9hZGVyLWljb24gewogIGZvbnQtc2l6ZTogMjhweDsKICBjb2xvcjogIzhjOTM5ZDsKICB3aWR0aDogMTc4cHg7CiAgaGVpZ2h0OiAxNzhweDsKICBsaW5lLWhlaWdodDogMTc4cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGJvcmRlcjogMXB4IGRhc2hlZCAjY2NjOwp9CgouYXZhdGFyIHsKICB3aWR0aDogMTc4cHg7CiAgaGVpZ2h0OiAxNzhweDsKICBkaXNwbGF5OiBibG9jazsKfQo="},{"version":3,"sources":["img.vue"],"names":[],"mappings":";;AAyVA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"img.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\n  <el-dialog title=\"拍照上传\" :visible.sync=\"visible\" width=\"1065px\">\n    <div class=\"box\">\n      <video id=\"videoCamera\" class=\"canvas\" :width=\"videoWidth\" :height=\"videoHeight\" autoPlay></video>\n      <canvas id=\"canvasCamera\" class=\"canvas\" :width=\"videoWidth\" :height=\"videoHeight\"></canvas>\n    </div>\n    <div slot=\"footer\" style=\"display:flex\">\r\n\t\t<el-upload\r\n\t\t  :action=\"$base.url + 'file/upload'\"\r\n\t\t  :on-success=\"uploadSuccess\"\r\n\t\t  :show-file-list=\"false\"\r\n\t\t  accept=\".jpg,.png,.jpge\"\r\n\t\t  style=\"margin-right:10px\">\r\n\t\t  <el-button icon=\"el-icon-upload2\" size=\"small\">\r\n\t\t    上传图片\r\n\t\t  </el-button>\r\n\t\t</el-upload>\n      \n      <el-button @click=\"drawImage\" icon=\"el-icon-camera\" size=\"small\">\n        拍照\n      </el-button>\n      <el-button v-if=\"os\" @click=\"getCompetence\" icon=\"el-icon-video-camera\" size=\"small\">\n        打开摄像头\n      </el-button>\n      <el-button v-else @click=\"stopNavigator\" icon=\"el-icon-switch-button\" size=\"small\">\n        关闭摄像头\n      </el-button>\n      <el-button @click=\"resetCanvas\" icon=\"el-icon-refresh\" size=\"small\">\n        重置\n      </el-button>\n      <el-button @click=\"onCancel\" icon=\"el-icon-circle-close\" size=\"small\">\n        完成\n      </el-button>\n    </div>\n  </el-dialog>\n</template>\n<script>\n  export default {\n    name: \"XXX\",\n    data() {\n      return {\r\n\t\tbaseUrl:`/${this.$base.name}/`,\n        visible: false, //弹窗\n        loading: false, //上传按钮加载\n        os: false, //控制摄像头开关\n        thisVideo: null,\n        thisContext: null,\n        thisCancas: null,\n        videoWidth: 500,\n        videoHeight: 400,\n        postOptions: [],\n        CertCtl: '',\n        // 遮罩层\n        loading: true,\n        // 选中数组\n        ids: [],\n        // 非单个禁用\n        single: true,\n        // 非多个禁用\n        multiple: true,\n        // 总条数\n        total: 0,\n        // 项目人员表格数据\n        akworkerList: [],\n        //工种类别数据字典\n        workerTypeOptions: [],\n        // 弹出层标题\n        title: \"\",\n        // 是否显示弹出层\n        open: false,\n        // 查询参数\n        queryParams: {\n          pageNum: 1,\n          pageSize: 10,\n          imgSrc: undefined,\n        },\n        // 表单参数\n\n        form: {},\n\n        // 表单校验\n\n        rules: {\n\n        }\n\n      };\n\n    },\n\n    created() {\n      // this.onTake()\n    },\n\t\n    methods: {\n\n      /*调用摄像头拍照开始*/\n\n      onTake() {\n\n        this.visible = true;\n\n        this.getCompetence();\n\n      },\n\n      onCancel() {\n\t\tthis.uploadImg()\n        this.visible = false;\n        /* this.resetCanvas();*/\n\n        this.stopNavigator();\n\n      },\r\n\t  uploadSuccess(e){\r\n\t\t  this.visible = false;\r\n\t\t  this.$emit('imgChange', e.file)\r\n\t  },\n\t\tuploadImg(){\r\n\t\t\tlet param = new FormData()\r\n\t\t\t　　param.append('file',this.base64toFile(this.imgSrc))\r\n\t\t\tthis.$http.post('file/upload',param).then(res=>{\r\n\t\t\t\tthis.$emit('imgChange', res.data.file)\r\n\t\t\t})\r\n\t\t},\r\n\t\tbase64toFile (dataurl, filename = 'file') {\r\n\t\t  let arr = dataurl.split(',')\r\n\t\t        let mime = arr[0].match(/:(.*?);/)[1]\r\n\t\t        let suffix = mime.split('/')[1]\r\n\t\t        let bstr = atob(arr[1])\r\n\t\t        let n = bstr.length\r\n\t\t        let u8arr = new Uint8Array(n)\r\n\t\t        while (n--) {\r\n\t\t          u8arr[n] = bstr.charCodeAt(n)\r\n\t\t        }\r\n\t\t        let file = new File([u8arr], `${filename}.${suffix}`, {\r\n\t\t          type: mime\r\n\t\t        })\r\n\t\t        return file\r\n\t\t},\n      // 调用摄像头权限\n\n      getCompetence() {\n\n        //必须在model中render后才可获取到dom节点,直接获取无法获取到model中的dom节点\n\n        this.$nextTick(() => {\n\n          const _this = this;\n\n          this.os = false; //切换成关闭摄像头\n\n          this.thisCancas = document.getElementById('canvasCamera');\n\n          this.thisContext = this.thisCancas.getContext('2d');\n\n          this.thisVideo = document.getElementById('videoCamera');\n\n          // 旧版本浏览器可能根本不支持mediaDevices，我们首先设置一个空对象\n\n          if (navigator.mediaDevices === undefined) {\n\n            navigator.menavigatordiaDevices = {}\n\n          }\n\n          // 一些浏览器实现了部分mediaDevices，我们不能只分配一个对象\n\n          // 使用getUserMedia，因为它会覆盖现有的属性。\n\n          // 这里，如果缺少getUserMedia属性，就添加它。\n\n          if (navigator.mediaDevices.getUserMedia === undefined) {\n\n            navigator.mediaDevices.getUserMedia = function(constraints) {\n\n              // 首先获取现存的getUserMedia(如果存在)\n\n              let getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator\n                .getUserMedia;\n\n              // 有些浏览器不支持，会返回错误信息\n\n              // 保持接口一致\n\n              if (!getUserMedia) {\n\n                return Promise.reject(new Error('getUserMedia is not implemented in this browser'))\n\n              }\n\n              // 否则，使用Promise将调用包装到旧的navigator.getUserMedia\n\n              return new Promise(function(resolve, reject) {\n\n                getUserMedia.call(navigator, constraints, resolve, reject)\n\n              })\n\n            }\n\n          }\n\n          const constraints = {\n\n            audio: false,\n\n            video: {\n              width: _this.videoWidth,\n              height: _this.videoHeight,\n              transform: 'scaleX(-1)'\n            }\n\n          };\n\n          navigator.mediaDevices.getUserMedia(constraints).then(function(stream) {\n\n            // 旧的浏览器可能没有srcObject\n\n            if ('srcObject' in _this.thisVideo) {\n\n              _this.thisVideo.srcObject = stream\n\n            } else {\n\n              // 避免在新的浏览器中使用它，因为它正在被弃用。\n\n              _this.thisVideo.src = window.URL.createObjectURL(stream)\n\n            }\n\n            _this.thisVideo.onloadedmetadata = function(e) {\n\n              _this.thisVideo.play()\n\n            }\n\n          }).catch(err => {\n\n            this.$notify({\n\n              title: '警告',\n\n              message: '没有开启摄像头权限或浏览器版本不兼容.',\n\n              type: 'warning'\n\n            });\n\n          });\n\n        });\n\n      },\n\n      //绘制图片\n\n      drawImage() {\n\n        // 点击，canvas画图\n\n        this.thisContext.drawImage(this.thisVideo, 0, 0, this.videoWidth, this.videoHeight);\n\n        // 获取图片base64链接\n\n        this.imgSrc = this.thisCancas.toDataURL('image/png');\n\n        /*const imgSrc=this.imgSrc;*/\n\n      },\n\n      //清空画布\n\n      clearCanvas(id) {\n\n        let c = document.getElementById(id);\n\n        let cxt = c.getContext(\"2d\");\n\n        cxt.clearRect(0, 0, c.width, c.height);\n\n      },\n\n      //重置画布\n\n      resetCanvas() {\n\n        this.imgSrc = \"\";\n\n        this.clearCanvas('canvasCamera');\n\n      },\n\n      //关闭摄像头\n\n      stopNavigator() {\n\n        if (this.thisVideo && this.thisVideo !== null) {\n\n          this.thisVideo.srcObject.getTracks()[0].stop();\n\n          this.os = true; //切换成打开摄像头\n\n        }\n\n      },\n\n      /*调用摄像头拍照结束*/\n\n    }\n\n  };\n</script>\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n\n  .avatar-uploader .el-upload {\n    border: 1px dashed #ccc;\n    border-radius: 6px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n  }\n\n  .avatar-uploader .el-upload:hover {\n    border-color: #409EFF;\n  }\n\n  .avatar-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    width: 178px;\n    height: 178px;\n    line-height: 178px;\n    text-align: center;\n    border: 1px dashed #ccc;\n  }\n\n  .avatar {\n    width: 178px;\n    height: 178px;\n    display: block;\n  }\n</style>\n"]}]}